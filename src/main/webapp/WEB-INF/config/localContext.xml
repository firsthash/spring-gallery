<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- place to search for annotated classes -->
    <context:component-scan base-package="org.yuliskov.nikart"/>
    <context:component-scan base-package="org.yuliskov.nikitaliskov"/>

    <!-- place to search for DAO interfaces -->
    <jpa:repositories base-package="org.yuliskov.nikart.repositories"/>
    <jpa:repositories base-package="org.yuliskov.nikitaliskov.repositories"/>

    <!-- enable http related annotations -->
    <mvc:annotation-driven/>

    <!-- enable transaction related annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory"/>

    <!-- enable caching related annotations -->
    <cache:annotation-driven cache-manager="cacheManager"/>

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="image"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="gallery"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="default"/>
            </set>
        </property>
    </bean>

    <!-- enable file posting -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
        p:maxUploadSize="#{10*1024*1024}"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
        p:prefix="/WEB-INF/classes/pages/" p:suffix=".jsp" p:order="2" />

    <!-- jvm cmd line props override this ones -->
    <context:property-placeholder location="/WEB-INF/config/data.properties" system-properties-mode="OVERRIDE"/>

    <!--<util:properties id="dataProperties" location="/WEB-INF/config/data.properties" local-override="true"/>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
        p:username="${jdbc.username}" p:password="${jdbc.password}"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource" p:persistenceUnitName="nikart" p:packagesToScan="org.yuliskov.nikart, org.yuliskov.nikitaliskov">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                p:database="${jpa.database}" p:showSql="${jpa.showSql}" p:generateDdl="${jpa.generateDdl}"/>
        </property>
    </bean>

    <mvc:resources location="classpath:/static/app1/" mapping="/static/**"/>
    <mvc:resources location="classpath:/static/app2/" mapping="/static2/**"/>
    <mvc:resources location="file:${user.data}/uploads/" mapping="/uploads/**"/>

    <mvc:interceptors>
        <!-- intercept only root path -->
        <mvc:interceptor>
            <mvc:mapping path="/"/>
            <bean id="domainNameInterceptor" class="org.yuliskov.nikart.utils.DomainNameInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- **************************************************************** -->
    <!--  THYMELEAF-SPECIFIC ARTIFACTS                                    -->
    <!--  TemplateResolver <- TemplateEngine <- ViewResolver              -->
    <!-- **************************************************************** -->

    <bean id="templateResolver"
          class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/classes/templates/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <!-- Template cache is true by default. Set to false if you want -->
        <!-- templates to be automatically updated when modified.        -->
        <property name="cacheable" value="true" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
</beans>